// Generated by view binder compiler. Do not edit!
package com.example.cityinformation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cityinformation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityWriteCityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText city;

  @NonNull
  public final ImageView cityimage;

  @NonNull
  public final Spinner cityspinner;

  @NonNull
  public final LinearLayout layoute;

  @NonNull
  public final AppCompatButton next2;

  private ActivityWriteCityBinding(@NonNull LinearLayout rootView, @NonNull EditText city,
      @NonNull ImageView cityimage, @NonNull Spinner cityspinner, @NonNull LinearLayout layoute,
      @NonNull AppCompatButton next2) {
    this.rootView = rootView;
    this.city = city;
    this.cityimage = cityimage;
    this.cityspinner = cityspinner;
    this.layoute = layoute;
    this.next2 = next2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityWriteCityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityWriteCityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_write_city, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityWriteCityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.city;
      EditText city = ViewBindings.findChildViewById(rootView, id);
      if (city == null) {
        break missingId;
      }

      id = R.id.cityimage;
      ImageView cityimage = ViewBindings.findChildViewById(rootView, id);
      if (cityimage == null) {
        break missingId;
      }

      id = R.id.cityspinner;
      Spinner cityspinner = ViewBindings.findChildViewById(rootView, id);
      if (cityspinner == null) {
        break missingId;
      }

      id = R.id.layoute;
      LinearLayout layoute = ViewBindings.findChildViewById(rootView, id);
      if (layoute == null) {
        break missingId;
      }

      id = R.id.next2;
      AppCompatButton next2 = ViewBindings.findChildViewById(rootView, id);
      if (next2 == null) {
        break missingId;
      }

      return new ActivityWriteCityBinding((LinearLayout) rootView, city, cityimage, cityspinner,
          layoute, next2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
